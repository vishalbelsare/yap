[build-system]
requires = ["hatchling>=1.4", "jupyter_client>=6"]
build-backend = "hatchling.build"

[project]
name = "yapkernel"
dynamic = ["version"]
authors = [{name = "IPython Development Team", email = "ipython-dev@scipy.org"}]
license = {file = "LICENSE"}
readme = "README.md"
description = "YAP Kernel for Jupyter"
keywords = ["Interactive", "Interpreter", "Shell", "Web"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Prolog",
]
urls = {Homepage = "https://github.com/vscosta/yap"}
requires-python = ">=3.8"
dependencies = [
    "yap4py",
    "debugpy>=1.6.5",
    "ipython>=7.23.1",
    "comm>=0.1.1",
    "traitlets>=5.4.0",
    "jupyter_client>=6.1.12",
    "jupyter_core>=4.12,!=5.0.*",
    # For tk event loop support only.
    "nest_asyncio",
    "tornado>=6.1",
    "matplotlib-inline>=0.1",
    'appnope;platform_system=="Darwin"',
    "pyzmq>=20",
    "psutil",
    "packaging",
]

[project.optional-dependencies]
docs = [
  "sphinx",
  "myst_parser",
  "pydata_sphinx_theme",
  "sphinxcontrib_github_alt",
  "sphinxcontrib-spelling",
  "sphinx-autodoc-typehints",
  "trio"
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "flaky",
    "ipyparallel",
    "pre-commit",
    "pytest-asyncio",
    "pytest-timeout"
]
cov = [
  "coverage[toml]",
  "pytest-cov",
  "matplotlib",
  "curio",
  "trio",
]
pyqt5 = ["pyqt5"]
pyside6 = ["pyside6"]

[tool.hatch.version]
path = "yapkernel/_version.py"

# Used to call hatch_build.py
[tool.hatch.build.hooks.custom]

[tool.hatch.build.targets.wheel.shared-data]
"data_kernelspec" = "share/jupyter/kernels/YAP7"

[tool.hatch.build.force-include]
"./yapkernel_launcher.py" = "yapkernel_launcher.py"

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"
api = "sphinx-apidoc -o docs/api -f -E yapkernel yapkernel/tests yapkernel/inprocess/tests yapkernel/datapub.py yapkernel/pickleutil.py yapkernel/serialize.py yapkernel/gui yapkernel/pylab"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
list = "python3 -m pip freeze"
test = "python3 -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["test", "cov"]
[tool.hatch.envs.cov.scripts]
test = "python3 -m pytest -vv --cov yapkernel --cov-branch --cov-report term-missing:skip-covered {args}"
nowarn = "test -W default {args}"

[[tool.hatch.envs.cov.matrix]]
qt = ["qt5", "qt6"]

[tool.hatch.envs.cov.overrides]
matrix.qt.features = [
  { value = "pyqt5", if = ["qt5"] },
  { value = "pyside6", if = ["qt6"] },
]

[tool.hatch.envs.typing]
features = ["test"]
dependencies = ["mypy>=0.990"]
[tool.hatch.envs.typing.scripts]
test = "mypy --install-types --non-interactive {args:.}"

[tool.hatch.envs.lint]
dependencies = ["black==23.3.0", "mdformat>0.7", "ruff==0.0.263"]
detached = true
[tool.hatch.envs.lint.scripts]
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
  "mdformat --check {args:docs *.md}"
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "mdformat {args:docs *.md}"
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules --ignore=yapkernel/pylab/backend_inline.py --ignore=yapkernel/pylab/config.py --ignore=yapkernel/gui/gtk3embed.py --ignore=yapkernel/gui/gtkembed.py --ignore=yapkernel/datapub.py --ignore=yapkernel/log.py --ignore=yapkernel/pickleutil.py --ignore=yapkernel/serialize.py --ignore=yapkernel/_eventloop_macos.py"
testpaths = [
    "yapkernel/tests",
    "yapkernel/inprocess/tests"
]
asyncio_mode = "auto"
timeout = 300
# Restore this setting to debug failures
#timeout_method = "thread"
filterwarnings= [
  # Fail on warnings
  "error",

  # Ignore our own warnings
  "ignore:The `stream` parameter of `getpass.getpass` will have no effect:UserWarning",
  "ignore:has moved to ipyparallel:DeprecationWarning",

  # IPython warnings
  "ignore: `Completer.complete` is pending deprecation since IPython 6.0 and will be replaced by `Completer.completions`:PendingDeprecationWarning",

  # Ignore jupyter_client warnings
  "ignore:unclosed <socket.socket:ResourceWarning",
  "ignore:unclosed event loop:ResourceWarning",
  "ignore:There is no current event loop:DeprecationWarning",
  "module:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.coverage.run]
relative_files = true
source = ["yapkernel"]
omit = [
  "yapkernel/tests/*",
  "yapkernel/datapub.py",
  "yapkernel/debugger.py",
  "yapkernel/eventloops.py",
  "yapkernel/log.py",
  "yapkernel/pickleutil.py",
  "yapkernel/serialize.py",
  "yapkernel/inprocess/tests/*",
  "yapkernel/gui/*",
  "yapkernel/pylab/*",
]

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ["py37"]

[tool.ruff]
target-version = "py37"
line-length = 100
select = [
  "A",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLW",
  "Q",
  "RUF",
  "S",
  "SIM",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore McCabe complexity
  "C901",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Use of `assert` detected
  "S101",
  # Line too long
  "E501",
  # Relative imports are banned
  "TID252",
  # Boolean ... in function definition
  "FBT001", "FBT002",
  # Module level import not at top of file
  "E402",
  # A001/A002/A003 .. is shadowing a python builtin
  "A001", "A002", "A003",
  # Possible hardcoded password
  "S105", "S106",
  # Q000 Single quotes found but double quotes preferred
  "Q000",
  # N806 Variable `B` in function should be lowercase
  "N806",
  # T201 `print` found
  "T201",
  # N802 Function name `CreateWellKnownSid` should be lowercase
  "N802", "N803",
  # C408 Unnecessary `dict` call (rewrite as a literal)
  "C408",
  # N801 Class name `directional_link` should use CapWords convention
  "N801",
  # SIM105 Use `contextlib.suppress(ValueError)` instead of try-except-pass
  "SIM105",
  # S110 `try`-`except`-`pass` detected
  "S110",
]
unfixable = [
  # Don't touch print statements
  "T201",
  # Don't touch noqa lines
  "RUF100",
]

[tool.ruff.per-file-ignores]
# B011 Do not call assert False since python -O removes these calls
# F841 local variable 'foo' is assigned to but never used
# C408 Unnecessary `dict` call
# E402 Module level import not at top of file
# T201 `print` found
# B007 Loop control variable `i` not used within the loop body.
# N802 Function name `assertIn` should be lowercase
# F841 Local variable `t` is assigned to but never used
# EM101 Exception must not use a string literal, assign to variable first
# PLR2004 Magic value used in comparison
# PLW0603 Using the global statement to update ...
# PLW2901 `for` loop variable ...
# PLC1901 `stderr == ""` can be simplified to `not stderr` as an empty string is falsey
# B018 Found useless expression. Either assign it to a variable or remove it.
# S603 `subprocess` call: check for execution of untrusted input
"yapkernel/tests/*" = ["B011", "F841", "C408", "E402", "T201", "B007", "N802", "F841", "EM101",
    "EM102", "EM103", "PLR2004", "PLW0603", "PLW2901", "PLC1901", "B018", "S603"]

[tool.interrogate]
ignore-init-module=true
ignore-private=true
ignore-semiprivate=true
ignore-property-decorators=true
ignore-nested-functions=true
ignore-nested-classes=true
fail-under=95
exclude = ["docs", "*/tests"]

[tool.check-wheel-contents]
toplevel = ["yapkernel/", "yapkernel_launcher.py"]
ignore = ["W002"]
